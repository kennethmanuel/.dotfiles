;==========================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;==========================================================
[global/wm]
include-file = $HOME/.config/polybar/mocha.ini

[bar/mainbar]
monitor = ${env:MONITOR:}
width = 100%
height = 24pt
radius = 6

; dpi = 96

background = ${colors.base}
foreground = ${colors.text}

line-size = 3pt

border-size = 2pt
border-color = #00000000

padding-left = 0
padding-right = 1

module-margin = 1

separator = |
separator-foreground = ${colors.disabled}

font-0 = "JetBrainsMono NF:size=11:weight=bold;3"
; font-1 = monospace:size=11;2
font-1 = "Source Han Sans;3"

modules-left = i3
modules-center = spotify
modules-right = cpu date systray

cursor-click = pointer
; cursor-scroll = ns-resize

enable-ipc = true

; wm-restack = generic
; wm-restack = bspwm
; wm-restack = i3

; override-redirect = true

; replace i3 with the name of your i3 module
scroll-up = "#i3.prev"
scroll-down = "#i3.next"
; Alternatively, you can send commands directly to i3
;scroll-up = i3-msg workspace next_on_output
;scroll-down = i3-msg workspace prev_on_output

[bar/taskwarriorbar]
monitor = ${env:MONITOR:}
width = 100%
height = 24pt
radius = 6

bottom = true

background = ${colors.base}
foreground = ${colors.text}

line-size = 3pt

border-size = 2pt
border-color = #00000000

padding-left = 0
padding-right = 1

module-margin = 1

separator = |
separator-foreground = ${colors.disabled}

font-0 = "JetBrainsMono NF:size=11:weight=bold;3"
font-1 = monospace;2
font-2 = "Source Han Sans;3"

modules-center = taskwarrior

cursor-click = pointer

enable-ipc = true

[module/systray]
type = internal/tray

format-margin = 4px
tray-spacing = 4px

[module/i3]
type = internal/i3

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; Show urgent workspaces regardless of whether the workspace is actually hidden 
; by pin-workspaces.
;
; Default: false
; New in version 3.6.0
show-urgent = true

; This will split the workspace name on ':'
; Default: false
strip-wsnumbers = true

; Sort the workspaces by index instead of the default
; sorting that groups the workspaces by output
; Default: false
index-sort = true

; Create click handler used to focus workspace
; Default: true
enable-click = true

; Create scroll handlers used to cycle workspaces
; Default: true
enable-scroll = false

; Wrap around when reaching the first/last workspace
; Default: true
wrapping-scroll = false

; Set the scroll cycle direction 
; Default: true
reverse-scroll = false

; Use fuzzy (partial) matching for wc-icon.
; Example: code;♚ will apply the icon to all workspaces 
; containing 'code' in the name
; Changed in version 3.7.0: Selects longest string match instead of the first match.
; Default: false
fuzzy-match = true

; ws-icon-[0-9]+ = <label>;<icon>
; NOTE: The <label> needs to match the name of the i3 workspace
; Neither <label> nor <icon> can contain a semicolon (;)
ws-icon-0 = 1;♚
ws-icon-1 = 2;♛
ws-icon-2 = 3;♜
ws-icon-3 = 4;♝
ws-icon-4 = 5;♞
ws-icon-default = ♟
; NOTE: You cannot skip icons, e.g. to get a ws-icon-6
; you must also define a ws-icon-5.
; NOTE: Icon will be available as the %icon% token inside label-*

; Available tags:
;   <label-state> (default) - gets replaced with <label-(focused|unfocused|visible|urgent)>
;   <label-mode> (default)
format = <label-state> <label-mode>

; Available tokens:
;   %mode%
; Default: %mode%
label-mode = %mode%
label-mode-padding = 1
label-mode-background = ${colors.surface2}
label-mode-foreground = ${colors.text}

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-focused = %index%
label-focused-foreground = ${colors.text}
label-focused-background = ${colors.surface0}
label-focused-underline = ${colors.blue}
label-focused-padding = 1

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-unfocused = %index%
label-unfocused-padding = 1

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-visible = %index%
label-visible-underline = #555555
label-visible-padding = 1

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-urgent = %index%
label-urgent-foreground = #000000
label-urgent-background = ${colors.red}
label-urgent-padding = 1

; Separator in between workspaces
label-separator = 
label-separator-padding = 1
label-separator-foreground = #ffb52a

[module/spotify]
type = custom/script
interval = 1
format-prefix = "󰝚 "
format = <label>
exec = python ~/.config/polybar/bin/spotify_status.py -f '{artist}: {song}'
format-underline = #FF00000
;control players (optional)
click-left = playerctl --player=spotify previous
click-middle = playerctl --player=spotify play-pause
click-right = playerctl --player=spotify next 

[module/cpu]
type = internal/cpu
interval = 2
format-prefix = "CPU "
format-prefix-foreground = ${colors.text}
label = %percentage:2%%

[module/date]
type = internal/date
interval = 1
date= %Y-%m-%d %H:%M:%S
label = %date%
label-foreground = ${colors.primary}

[module/taskwarrior]
type = custom/ipc
hook-0 = ~/.config/polybar/bin/task_polybar.sh
hook-1 = task "$((`cat /tmp/tw_polybar_id`))" done && ~/.config/polybar/bin/task_polybar.sh
format = <label>
format-foreground = ${colors.text}
format-prefix = " "
initial = 1
click-left = "#taskwarrior.hook.1"

[settings]
screenchange-reload = true
pseudo-transparency = true

; vim:ft=dosini

